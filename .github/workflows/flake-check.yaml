name: Nix Flake Check
on:
  workflow_call:
    inputs:
      check_dev:
        required: false
        type: boolean
        default: true
      cache:
        required: false
        type: boolean
        default: false
      timeout-minutes:
        required: false
        type: number
        default: 10
    secrets:
      ssh_key:
        required: false

jobs:
  nix-flake-check:
    timeout-minutes: ${{ inputs.timeout-minutes }}
    runs-on: ubuntu-latest
    steps:
      # https://stackoverflow.com/a/70249520/5408933
      # https://github.com/orgs/community/discussions/26726
      - name: Check if ssh_key available
        id: secret-check
        shell: bash
        run: |
          if [ "${{ secrets.ssh_key }}" != '' ]; then
            echo "available=true" >> $GITHUB_OUTPUT;
          else
            echo "available=false" >> $GITHUB_OUTPUT;
          fi
      - name: Setup SSH agent
        if: ${{ steps.secret-check.outputs.available == 'true' }}
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.ssh_key }}
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@v28
        with:
          nix_conf: |
            system-features = nixos-test benchmark big-parallel uid-range kvm
      - name: Restore and cache Nix store
        uses: nix-community/cache-nix-action@v5
        with:
           # restore and save a cache using this key
           primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
           # if there's no cache hit, restore a cache by this prefix
           restore-prefixes-first-match: nix-${{ runner.os }}-
        if: ${{ inputs.cache }}
      - name: Flake Check Dev
        if: ${{ inputs.check_dev }}
        run: nix flake check "./?dir=dev&submodules=1"
      - name: Flake Check
        run: nix flake check
